CREATE TABLE TB_PESQUISADOR (
    ID_PESQUISADOR INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NM_PESQUISADOR VARCHAR(100) NOT NULL,
    DS_EMAIL VARCHAR(100) NOT NULL,
    DS_INSTITUICAO VARCHAR(100),
    DT_CADASTRO DATE NOT NULL DEFAULT CURRENT_DATE
);

CREATE TABLE TB_ARTIGO (
    ID_ARTIGO INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NM_TITULO VARCHAR(255) NOT NULL,
    DS_RESUMO TEXT,
    DT_PUBLICACAO DATE NOT NULL,
    NR_PAGINAS INTEGER,
    CD_DOI VARCHAR(50)
);

CREATE TABLE RL_ARTIGO_AUTOR (
    ID_ARTIGO INTEGER NOT NULL,
    ID_PESQUISADOR INTEGER NOT NULL,
    IS_AUTOR_PRINCIPAL BOOLEAN DEFAULT FALSE,

    CONSTRAINT PK_ARTIGO_AUTOR PRIMARY KEY (ID_ARTIGO, ID_PESQUISADOR),
    CONSTRAINT FK_ARTIGO_AUTOR_ARTIGO FOREIGN KEY (ID_ARTIGO)
        REFERENCES TB_ARTIGO (ID_ARTIGO) ON DELETE CASCADE,
    CONSTRAINT FK_ARTIGO_AUTOR_PESQUISADOR FOREIGN KEY (ID_PESQUISADOR)
        REFERENCES TB_PESQUISADOR (ID_PESQUISADOR) ON DELETE CASCADE
);

CREATE TABLE TB_AVALIACAO (
    ID_AVALIACAO INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ID_ARTIGO INTEGER NOT NULL,
    ID_REVISOR INTEGER NOT NULL, -- O revisor é um PESQUISADOR
    VL_NOTA NUMERIC(3,2) NOT NULL,
    DT_REVISAO DATE NOT NULL DEFAULT CURRENT_DATE,
    DS_COMENTARIO TEXT,

    CONSTRAINT FK_AVALIACAO_ARTIGO FOREIGN KEY (ID_ARTIGO)
        REFERENCES TB_ARTIGO (ID_ARTIGO) ON DELETE CASCADE,
    CONSTRAINT FK_AVALIACAO_REVISOR FOREIGN KEY (ID_REVISOR)
        REFERENCES TB_PESQUISADOR (ID_PESQUISADOR) ON DELETE RESTRICT,
    CONSTRAINT UK_AVALIACAO_ARTIGO_REVISOR UNIQUE (ID_ARTIGO, ID_REVISOR),
    CONSTRAINT CK_AVALIACAO_NOTA CHECK (VL_NOTA BETWEEN 0.00 AND 5.00)
);

CREATE TABLE TB_CRITERIO (
    ID_CRITERIO INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CD_TIPO_CRITERIO VARCHAR(10) NOT NULL, -- 'INCLUSAO' ou 'EXCLUSAO'
    DS_DESCRICAO TEXT NOT NULL,
    CONSTRAINT CK_CRITERIO_TIPO CHECK (CD_TIPO_CRITERIO IN ('INCLUSAO', 'EXCLUSAO'))
);

CREATE TABLE RL_ARTIGO_CRITERIO (
    ID_ARTIGO INTEGER NOT NULL,
    ID_CRITERIO INTEGER NOT NULL,
    DS_JUSTIFICATIVA VARCHAR(255),
    DT_APLICACAO DATE NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT PK_ARTIGO_CRITERIO PRIMARY KEY (ID_ARTIGO, ID_CRITERIO),
    CONSTRAINT FK_ARTIGO_CRITERIO_ARTIGO FOREIGN KEY (ID_ARTIGO) 
        REFERENCES TB_ARTIGO (ID_ARTIGO) ON DELETE CASCADE,
    CONSTRAINT FK_ARTIGO_CRITERIO_CRITERIO FOREIGN KEY (ID_CRITERIO) 
        REFERENCES TB_CRITERIO (ID_CRITERIO) ON DELETE RESTRICT
);

CREATE TABLE TB_REFERENCIA (
    ID_REFERENCIA INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NM_TITULO VARCHAR(255) NOT NULL,
    DS_AUTORES VARCHAR(255) NOT NULL,
    DT_PUBLICACAO DATE,
    CD_DOI_REFERENCIA VARCHAR(50)
);

CREATE TABLE RL_ARTIGO_REFERENCIA (
    ID_ARTIGO_CITA INTEGER NOT NULL,
    ID_REFERENCIA_CITADA INTEGER NOT NULL,
    CONSTRAINT PK_ARTIGO_REFERENCIA PRIMARY KEY (ID_ARTIGO_CITA, ID_REFERENCIA_CITADA),
    CONSTRAINT FK_ARTIGO_REF_CITA FOREIGN KEY (ID_ARTIGO_CITA) 
        REFERENCES TB_ARTIGO (ID_ARTIGO) ON DELETE CASCADE,
    CONSTRAINT FK_ARTIGO_REF_CITADA FOREIGN KEY (ID_REFERENCIA_CITADA) 
        REFERENCES TB_REFERENCIA (ID_REFERENCIA) ON DELETE RESTRICT
);

CREATE TABLE TB_PROJETO (
    ID_PROJETO INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NM_PROJETO VARCHAR(150) NOT NULL,
    DT_INICIO DATE NOT NULL,
    DT_FIM_PREVISTO DATE,
    DS_ESTADO VARCHAR(20) NOT NULL DEFAULT 'EM_ANDAMENTO',
    CONSTRAINT UK_PROJETO_NOME UNIQUE (NM_PROJETO),
    CONSTRAINT CK_PROJETO_ESTADO CHECK (DS_ESTADO IN ('EM_ANDAMENTO','FINALIZADO'))
);

CREATE TABLE RL_PROJETO_ARTIGO (
    ID_PROJETO INTEGER NOT NULL,
    ID_ARTIGO INTEGER NOT NULL,
    CONSTRAINT PK_PROJETO_ARTIGO PRIMARY KEY (ID_PROJETO, ID_ARTIGO),
    CONSTRAINT FK_PROJETO_ARTIGO_PROJETO FOREIGN KEY (ID_PROJETO) 
        REFERENCES TB_PROJETO (ID_PROJETO) ON DELETE CASCADE,
    CONSTRAINT FK_PROJETO_ARTIGO_ARTIGO FOREIGN KEY (ID_ARTIGO) 
        REFERENCES TB_ARTIGO (ID_ARTIGO) ON DELETE CASCADE
);

CREATE TABLE TB_BASE_DADO (
    ID_BASE_DADO INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NM_BASE_DADO VARCHAR(100) NOT NULL,
    DS_URL_BASE VARCHAR(255),
    CONSTRAINT UK_BASE_DADO_NOME UNIQUE (NM_BASE_DADO)
);

CREATE TABLE RL_ARTIGO_BASE (
    ID_ARTIGO INTEGER NOT NULL,
    ID_BASE_DADO INTEGER NOT NULL,
    DT_COLETA DATE NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT PK_ARTIGO_BASE PRIMARY KEY (ID_ARTIGO, ID_BASE_DADO),
    CONSTRAINT FK_ARTIGO_BASE_ARTIGO FOREIGN KEY (ID_ARTIGO) 
        REFERENCES TB_ARTIGO (ID_ARTIGO) ON DELETE CASCADE,
    CONSTRAINT FK_ARTIGO_BASE_BASE FOREIGN KEY (ID_BASE_DADO) 
        REFERENCES TB_BASE_DADO (ID_BASE_DADO) ON DELETE RESTRICT
);

-- Add helpful indexes and case-insensitive unique email
CREATE UNIQUE INDEX ux_pesquisador_email_lower
    ON TB_PESQUISADOR (LOWER(DS_EMAIL));

-- Optional unique index on DOI (allows NULLs; if you want only one NULL use a partial index)
CREATE UNIQUE INDEX ux_artigo_doi ON TB_ARTIGO (CD_DOI) WHERE CD_DOI IS NOT NULL;

-- Indexes on foreign keys for performance
CREATE INDEX ix_rl_artigo_autor_artigo ON RL_ARTIGO_AUTOR (ID_ARTIGO);
CREATE INDEX ix_rl_artigo_autor_pesquisador ON RL_ARTIGO_AUTOR (ID_PESQUISADOR);
CREATE INDEX ix_tb_avaliacao_artigo ON TB_AVALIACAO (ID_ARTIGO);
CREATE INDEX ix_tb_avaliacao_revisor ON TB_AVALIACAO (ID_REVISOR);
CREATE INDEX ix_rl_artigo_criterio_criterio ON RL_ARTIGO_CRITERIO (ID_CRITERIO);
CREATE INDEX ix_rl_artigo_referencia_citada ON RL_ARTIGO_REFERENCIA (ID_REFERENCIA_CITADA);
CREATE INDEX ix_rl_projeto_artigo_projeto ON RL_PROJETO_ARTIGO (ID_PROJETO);
CREATE INDEX ix_rl_artigo_base_basedado ON RL_ARTIGO_BASE (ID_BASE_DADO);

-- Índice único parcial para DOI de referência (opcional)
CREATE UNIQUE INDEX ux_referencia_doi ON TB_REFERENCIA (CD_DOI_REFERENCIA) WHERE CD_DOI_REFERENCIA IS NOT NULL;