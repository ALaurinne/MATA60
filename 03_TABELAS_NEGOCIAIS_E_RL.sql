SET search_path TO prj5;

-- TB_PROJETO
CREATE TABLE TB_PROJETO (
  ID_PROJETO BIGINT PRIMARY KEY DEFAULT nextval('SQ_PROJETO'),
  NO_PROJETO TEXT NOT NULL
);

-- TB_ARTIGO
CREATE TABLE TB_ARTIGO (
  ID_ARTIGO  BIGINT PRIMARY KEY DEFAULT nextval('SQ_ARTIGO'),
  ID_PROJETO BIGINT NOT NULL,
  NO_TITULO  TEXT  NOT NULL,
  AN_ANO     INTEGER NOT NULL,
  NO_VENUE   TEXT,
  CONSTRAINT FK_PROJETO_ARTIGO FOREIGN KEY (ID_PROJETO) REFERENCES TB_PROJETO(ID_PROJETO)
);

-- TB_AUTOR / RL_ARTIGO_AUTOR (N:N)
CREATE TABLE TB_AUTOR (
  ID_AUTOR BIGINT PRIMARY KEY DEFAULT nextval('SQ_AUTOR'),
  NO_AUTOR TEXT NOT NULL
);
CREATE TABLE RL_ARTIGO_AUTOR (
  ID_ARTIGO BIGINT NOT NULL,
  ID_AUTOR  BIGINT NOT NULL,
  NU_ORDEM  INTEGER NOT NULL,
  CONSTRAINT PK_RL_ARTIGO_AUTOR PRIMARY KEY (ID_ARTIGO, ID_AUTOR),
  CONSTRAINT FK_ARTIGO_RLAA FOREIGN KEY (ID_ARTIGO) REFERENCES TB_ARTIGO(ID_ARTIGO),
  CONSTRAINT FK_AUTOR_RLAA  FOREIGN KEY (ID_AUTOR)  REFERENCES TB_AUTOR(ID_AUTOR)
);

-- Critérios e triagem
CREATE TABLE TB_CRITERIO (
  ID_CRITERIO BIGINT PRIMARY KEY DEFAULT nextval('SQ_CRITERIO'),
  TP_CRIT     TP_CRITERIO NOT NULL,
  DS_CRITERIO TEXT NOT NULL
);

CREATE TABLE TB_REVISOR (
  ID_REVISOR BIGINT PRIMARY KEY DEFAULT nextval('SQ_REVISOR'),
  NO_REVISOR TEXT NOT NULL
);

CREATE TABLE TB_TRIAGEM (
  ID_TRIAGEM  BIGINT PRIMARY KEY DEFAULT nextval('SQ_TRIAGEM'),
  ID_ARTIGO   BIGINT NOT NULL,
  ID_REVISOR  BIGINT NOT NULL,
  ID_CRITERIO BIGINT NOT NULL,
  TP_DECISAO  TEXT  NOT NULL, -- INCLUIR / EXCLUIR / DUPLICADO / DUVIDA
  DT_DECISAO  TIMESTAMP NOT NULL DEFAULT now(),
  CONSTRAINT FK_ARTIGO_TRIAGEM   FOREIGN KEY (ID_ARTIGO)   REFERENCES TB_ARTIGO(ID_ARTIGO),
  CONSTRAINT FK_REVISOR_TRIAGEM  FOREIGN KEY (ID_REVISOR)  REFERENCES TB_REVISOR(ID_REVISOR),
  CONSTRAINT FK_CRITERIO_TRIAGEM FOREIGN KEY (ID_CRITERIO) REFERENCES TB_CRITERIO(ID_CRITERIO)
);

-- Avaliação e notas
CREATE TABLE TB_AVALIACAO (
  ID_AVALIACAO BIGINT PRIMARY KEY DEFAULT nextval('SQ_AVALIACAO'),
  ID_ARTIGO BIGINT NOT NULL,
  ID_REVISOR BIGINT NOT NULL,
  NU_SCORE  INTEGER NOT NULL CHECK (NU_SCORE BETWEEN 0 AND 100),
  DS_COMENTARIO TEXT,
  CONSTRAINT FK_ARTIGO_AVAL  FOREIGN KEY (ID_ARTIGO) REFERENCES TB_ARTIGO(ID_ARTIGO),
  CONSTRAINT FK_REVISOR_AVAL FOREIGN KEY (ID_REVISOR) REFERENCES TB_REVISOR(ID_REVISOR)
);

CREATE TABLE TB_NOTA (
  ID_NOTA BIGINT PRIMARY KEY DEFAULT nextval('SQ_NOTA'),
  ID_AVALIACAO BIGINT NOT NULL,
  DS_NOTA TEXT NOT NULL,
  CONSTRAINT FK_AVALIACAO_NOTA FOREIGN KEY (ID_AVALIACAO) REFERENCES TB_AVALIACAO(ID_AVALIACAO)
);

-- Referências e taxonomia/keywords (tendências)
CREATE TABLE TB_REFERENCIA (
  ID_REFERENCIA BIGINT PRIMARY KEY DEFAULT nextval('SQ_REFERENCIA'),
  ID_ARTIGO BIGINT NOT NULL,
  DS_CITACAO TEXT NOT NULL,
  CONSTRAINT FK_ARTIGO_REF FOREIGN KEY (ID_ARTIGO) REFERENCES TB_ARTIGO(ID_ARTIGO)
);

CREATE TABLE TB_KEYWORD (
  ID_KEYWORD BIGINT PRIMARY KEY DEFAULT nextval('SQ_KEYWORD'),
  NO_KEYWORD TEXT NOT NULL
);
CREATE TABLE RL_ARTIGO_KEYWORD (
  ID_ARTIGO BIGINT NOT NULL,
  ID_KEYWORD BIGINT NOT NULL,
  CONSTRAINT PK_RL_ARTIGO_KEY PRIMARY KEY (ID_ARTIGO, ID_KEYWORD),
  CONSTRAINT FK_ARTIGO_RLAK  FOREIGN KEY (ID_ARTIGO)  REFERENCES TB_ARTIGO(ID_ARTIGO),
  CONSTRAINT FK_KEYWORD_RLAK FOREIGN KEY (ID_KEYWORD) REFERENCES TB_KEYWORD(ID_KEYWORD)
);

-- Exigência do professor: pelo menos 2 entidades com prefixo “tabela”
CREATE TABLE TABELA_TAXONOMIA (
  ID_TAXONOMIA BIGINT PRIMARY KEY DEFAULT nextval('SQ_TAXONOMIA'),
  NO_TERMO TEXT NOT NULL,
  ID_TAXONOMIA_PAI BIGINT REFERENCES TABELA_TAXONOMIA(ID_TAXONOMIA)
);

CREATE TABLE RL_ARTIGO_TAXONOMIA (
  ID_ARTIGO BIGINT NOT NULL,
  ID_TAXONOMIA BIGINT NOT NULL,
  CONSTRAINT PK_RL_ART_TAX PRIMARY KEY (ID_ARTIGO, ID_TAXONOMIA),
  CONSTRAINT FK_ARTIGO_RLAT    FOREIGN KEY (ID_ARTIGO)    REFERENCES TB_ARTIGO(ID_ARTIGO),
  CONSTRAINT FK_TAXONOMIA_RLAT FOREIGN KEY (ID_TAXONOMIA) REFERENCES TABELA_TAXONOMIA(ID_TAXONOMIA)
);
