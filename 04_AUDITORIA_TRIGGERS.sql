SET search_path TO prj5;

-- Tabelas de trilha de auditoria (PPP1/MAD)
CREATE TABLE TA_ARTIGO (
  ID_AUD BIGSERIAL PRIMARY KEY,
  TP_OPERACAO CHAR(1) NOT NULL, -- I/U/D
  DT_OPERACAO TIMESTAMP NOT NULL DEFAULT now(),
  NM_USUARIO_BD TEXT DEFAULT current_user,
  NM_USUARIO_APLICACAO TEXT DEFAULT current_setting('application.user', true),
  NM_TERMINAL TEXT DEFAULT inet_client_addr()::text,
  -- espelhamento mínimo
  ID_ARTIGO BIGINT, ID_PROJETO BIGINT, NO_TITULO TEXT, AN_ANO INTEGER, NO_VENUE TEXT
);

-- Função genérica por tabela (exemplo p/ TB_ARTIGO)
CREATE OR REPLACE FUNCTION FC_AUDITORIA_ROW_TB_ARTIGO()
RETURNS trigger LANGUAGE plpgsql AS $$
DECLARE v CHAR(1);
BEGIN
  v := CASE TG_OP WHEN 'INSERT' THEN 'I' WHEN 'UPDATE' THEN 'U' ELSE 'D' END;
  INSERT INTO TA_ARTIGO (TP_OPERACAO, ID_ARTIGO, ID_PROJETO, NO_TITULO, AN_ANO, NO_VENUE)
  VALUES (v,
          COALESCE(NEW.ID_ARTIGO, OLD.ID_ARTIGO),
          COALESCE(NEW.ID_PROJETO, OLD.ID_PROJETO),
          COALESCE(NEW.NO_TITULO,  OLD.NO_TITULO),
          COALESCE(NEW.AN_ANO,     OLD.AN_ANO),
          COALESCE(NEW.NO_VENUE,   OLD.NO_VENUE));
  RETURN COALESCE(NEW, OLD);
END$$;

CREATE TRIGGER TG_A_I_TB_ARTIGO AFTER INSERT ON TB_ARTIGO
FOR EACH ROW EXECUTE PROCEDURE FC_AUDITORIA_ROW_TB_ARTIGO();
CREATE TRIGGER TG_A_U_TB_ARTIGO AFTER UPDATE ON TB_ARTIGO
FOR EACH ROW EXECUTE PROCEDURE FC_AUDITORIA_ROW_TB_ARTIGO();
CREATE TRIGGER TG_A_D_TB_ARTIGO AFTER DELETE ON TB_ARTIGO
FOR EACH ROW EXECUTE PROCEDURE FC_AUDITORIA_ROW_TB_ARTIGO();
